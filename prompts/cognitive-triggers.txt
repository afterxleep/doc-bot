# MCP TOOL USAGE DECISION TREE

## KEYWORD-TO-TOOL MAPPINGS:

### Code Generation Keywords → check_project_rules
**Keywords**: write, create, implement, build, add, code, function, class, component, method, develop, generate, make
**Logic**: Code generation requires project-specific rules validation
**Action**: Execute check_project_rules before any code output

### Project Information Keywords → search_documentation
**Keywords**: how, what, why, architecture, approach, feature, authentication, database, API, testing, pattern
**Context Indicators**: "this project", "this codebase", "here", "our", specific feature names
**Logic**: Project-specific questions require documentation lookup
**Action**: Execute search_documentation with relevant query

### Documentation Discovery Keywords → get_global_rules
**Keywords**: documentation, available, capabilities, help with, what exists, rules, standards
**Logic**: Documentation queries need comprehensive rule listing
**Action**: Execute get_global_rules for overview

### Context-Specific Keywords → get_relevant_docs
**Keywords**: file, directory, component, working on, specific, this [filename], path
**Logic**: File-specific work requires targeted documentation
**Action**: Execute get_relevant_docs with file context

## DECISION ALGORITHM:

1. **Parse Input**: Extract keywords from user query
2. **Match Patterns**: Check keywords against tool mappings
3. **Priority Order**: Code generation > Project questions > Documentation discovery > Context-specific
4. **Tool Execution**: Call appropriate MCP tool first
5. **Response Generation**: Base answer on tool output
6. **Validation**: Ensure response aligns with retrieved documentation

## EXECUTION REQUIREMENTS:

- **Mandatory**: Use MCP tools for any project-related query
- **Precedence**: Tool responses override general knowledge
- **Accuracy**: Verify information against documentation
- **Completeness**: Don't add assumptions beyond tool output
- **Search Limits**: If documentation searches yield no results after 2-3 attempts, follow web search fallback
- **Fallback Protocol**: When instructed to use web search:
  - Acknowledge the documentation search limitation
  - Use web search for external resources
  - Combine findings with any available project context